{"version":3,"file":"chartjs-plugin-annotation.min.js","sources":["../src/events.js","../src/helpers.js","../src/types/box.js","../src/types/line.js","../src/types/ellipse.js","../src/types/point.js","../src/annotation.js","../src/index.js"],"sourcesContent":["import {distanceBetweenPoints, callback as callHandler} from 'chart.js/helpers';\n\nconst clickHooks = ['click', 'dblclick'];\nconst moveHooks = ['enter', 'leave'];\nconst hooks = clickHooks.concat(moveHooks);\n\nexport function updateListeners(chart, state, options) {\n  const annotations = options.annotations || [];\n  state.listened = false;\n  state.moveListened = false;\n\n  hooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    }\n  });\n  moveHooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    annotations.forEach(scope => {\n      if (!state.listened) {\n        clickHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\nexport function handleEvent(chart, state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      handleMoveEvents(chart, state, event);\n      break;\n    case 'click':\n      handleClickEvents(chart, state, event, options);\n      break;\n    default:\n    }\n  }\n}\n\nfunction handleMoveEvents(chart, state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let element;\n\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n\n  const previous = state.hovered;\n  state.hovered = element;\n\n  dispatchMoveEvents(chart, state, previous, element);\n}\n\nfunction dispatchMoveEvents(chart, state, previous, element) {\n  if (previous && previous !== element) {\n    dispatchEvent(chart, state, previous.options.leave || state.listeners.leave, previous);\n  }\n  if (element && element !== previous) {\n    dispatchEvent(chart, state, element.options.enter || state.listeners.enter, element);\n  }\n}\n\nfunction handleClickEvents(chart, state, event, options) {\n  const listeners = state.listeners;\n  const element = getNearestItem(state.elements, event);\n  if (element) {\n    const elOpts = element.options;\n    const dblclick = elOpts.dblclick || listeners.dblclick;\n    const click = elOpts.click || listeners.click;\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(chart, state, dblclick, element);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(() => {\n        delete element.clickTimeout;\n        dispatchEvent(chart, state, click, element);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(chart, state, click, element);\n    }\n  }\n}\n\nfunction dispatchEvent(chart, _state, handler, element) {\n  callHandler(handler, [{chart, element}]);\n}\n\nfunction getNearestItem(elements, position) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return elements\n    .filter((element) => element.inRange(position.x, position.y))\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const distance = distanceBetweenPoints(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1)[0]; // return only the top item\n}\n","import {isFinite} from 'chart.js/helpers';\n\nconst PI = Math.PI;\nconst HALF_PI = PI / 2;\n\nexport function scaleValue(scale, value, fallback) {\n  value = typeof value === 'string' ? scale.parse(value) : value;\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n * given size (width, height) and the same `radius` for all corners.\n * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n * @param {number} width - The rectangle's width.\n * @param {number} height - The rectangle's height.\n * @param {number} radius - The rounded amount (in pixels) for the four corners.\n * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n */\nexport function roundedRect(ctx, x, y, width, height, radius) {\n  ctx.beginPath();\n  if (radius) {\n    const r = Math.min(radius, height / 2, width / 2);\n    const left = x + r;\n    const top = y + r;\n    const right = x + width - r;\n    const bottom = y + height - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -PI, 0);\n      ctx.arc(left, bottom, r, 0, PI);\n    } else {\n      ctx.arc(left, top, r, -PI, PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, width, height);\n  }\n}\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {{x: number, y: number}} point - the point to rotate\n * @param {{x: number, y: number}} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {{x: number, y: number}} rotated point\n */\nexport function rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n","import {Element} from 'chart.js';\nimport {scaleValue, roundedRect} from '../helpers';\n\nexport default class BoxAnnotation extends Element {\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n\n    return mouseX >= x &&\n\t\t\tmouseX <= x + width &&\n\t\t\tmouseY >= y &&\n\t\t\tmouseY <= y + height;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, width, height, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    roundedRect(ctx, x, y, width, height, options.cornerRadius);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const xScale = chart.scales[options.xScaleID];\n    const yScale = chart.scales[options.yScaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (!xScale && !yScale) {\n      return {options: {}};\n    }\n\n    if (xScale) {\n      min = scaleValue(xScale, options.xMin, x);\n      max = scaleValue(xScale, options.xMax, x2);\n      x = Math.min(min, max);\n      x2 = Math.max(min, max);\n    }\n\n    if (yScale) {\n      min = scaleValue(yScale, options.yMin, y2);\n      max = scaleValue(yScale, options.yMax, y);\n      y = Math.min(min, max);\n      y2 = Math.max(min, max);\n    }\n\n    return {\n      x,\n      y,\n      x2,\n      y2,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  display: true,\n  borderWidth: 1,\n  cornerRadius: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n","import {Element, defaults} from 'chart.js';\nimport {isArray, toFontString, toRadians} from 'chart.js/helpers';\nimport {scaleValue, roundedRect, rotated} from '../helpers';\n\nconst PI = Math.PI;\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\n\nexport default class LineAnnotation extends Element {\n  intersects(x, y, epsilon) {\n    epsilon = epsilon || 0.001;\n    const me = this;\n    const p1 = {x: me.x, y: me.y};\n    const p2 = {x: me.x2, y: me.y2};\n    const dy = interpolateY(x, p1, p2);\n    const dx = interpolateX(y, p1, p2);\n    return (\n      (!isFinite(dy) || Math.abs(y - dy) < epsilon) &&\n\t\t\t(!isFinite(dx) || Math.abs(x - dx) < epsilon)\n    );\n  }\n\n  labelIsVisible() {\n    const label = this.options.label;\n    return label && label.enabled && label.content;\n  }\n\n  isOnLabel(mouseX, mouseY) {\n    const {labelRect} = this;\n\n    if (!labelRect) {\n      return false;\n    }\n\n    const {x, y} = rotated({x: mouseX, y: mouseY}, labelRect, -labelRect.rotation);\n    const w2 = labelRect.width / 2;\n    const h2 = labelRect.height / 2;\n    return x >= labelRect.x - w2 && x <= labelRect.x + w2 &&\n      y >= labelRect.y - h2 && y <= labelRect.y + h2;\n  }\n\n  inRange(x, y) {\n    const epsilon = this.options.borderWidth || 1;\n    return this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n  }\n\n  getCenterPoint() {\n    return {\n      x: (this.x2 + this.x) / 2,\n      y: (this.y2 + this.y) / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, options} = this;\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(options.borderDash);\n    }\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    // Draw\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  drawLabel(ctx, chartArea) {\n    if (this.labelIsVisible()) {\n      ctx.save();\n      drawLabel(ctx, this, chartArea);\n      ctx.restore();\n    }\n  }\n\n  resolveElementProperties(chart, options) {\n    const scale = chart.scales[options.scaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (scale) {\n      min = scaleValue(scale, options.value, NaN);\n      max = scaleValue(scale, options.endValue, min);\n      if (scale.isHorizontal()) {\n        x = min;\n        x2 = max;\n      } else {\n        y = min;\n        y2 = max;\n      }\n    } else {\n      const xScale = chart.scales[options.xScaleID];\n      const yScale = chart.scales[options.yScaleID];\n\n      if (xScale) {\n        x = scaleValue(xScale, options.xMin, x);\n        x2 = scaleValue(xScale, options.xMax, x2);\n      }\n\n      if (yScale) {\n        y = scaleValue(yScale, options.yMin, y);\n        y2 = scaleValue(yScale, options.yMax, y2);\n      }\n    }\n    return {\n      x,\n      y,\n      x2,\n      y2,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n  display: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    font: {\n      family: defaults.font.family,\n      size: defaults.font.size,\n      style: 'bold',\n    },\n    color: '#fff',\n    xPadding: 6,\n    yPadding: 6,\n    rotation: 0,\n    cornerRadius: 6,\n    position: 'center',\n    xAdjust: 0,\n    yAdjust: 0,\n    enabled: false,\n    content: null\n  }\n};\n\nfunction calculateAutoRotation(line) {\n  const {x, y, x2, y2} = line;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction drawLabel(ctx, line, chartArea) {\n  const label = line.options.label;\n\n  ctx.font = toFontString(label.font);\n  ctx.textAlign = 'center';\n\n  const {width, height} = measureLabel(ctx, label);\n\n  const rect = line.labelRect = calculateLabelPosition(line, width, height, chartArea);\n\n  ctx.translate(rect.x, rect.y);\n  ctx.rotate(rect.rotation);\n\n  ctx.fillStyle = label.backgroundColor;\n  roundedRect(ctx, -(width / 2), -(height / 2), width, height, label.cornerRadius);\n  ctx.fill();\n\n  ctx.fillStyle = label.color;\n  if (isArray(label.content)) {\n    let textYPosition = -(height / 2) + label.yPadding;\n    for (let i = 0; i < label.content.length; i++) {\n      ctx.textBaseline = 'top';\n      ctx.fillText(\n        label.content[i],\n        -(width / 2) + (width / 2),\n        textYPosition\n      );\n      textYPosition += label.font.size + label.yPadding;\n    }\n  } else {\n    ctx.textBaseline = 'middle';\n    ctx.fillText(label.content, 0, 0);\n  }\n}\n\nconst widthCache = new Map();\nfunction measureLabel(ctx, label) {\n  const content = label.content;\n  const lines = isArray(content) ? content : [content];\n  const count = lines.length;\n  let width = 0;\n  for (let i = 0; i < count; i++) {\n    const text = lines[i];\n    if (!widthCache.has(text)) {\n      widthCache.set(text, ctx.measureText(text).width);\n    }\n    width = Math.max(width, widthCache.get(text));\n  }\n  width += 2 * label.xPadding;\n\n  return {\n    width,\n    height: count * label.font.size + ((count + 1) * label.yPadding)\n  };\n}\n\nfunction calculateLabelPosition(line, width, height, chartArea) {\n  const label = line.options.label;\n  const {xAdjust, yAdjust, xPadding, yPadding, position} = label;\n  const p1 = {x: line.x, y: line.y};\n  const p2 = {x: line.x2, y: line.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(line, position, size, chartArea);\n  const pt = pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: xPadding};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: yPadding};\n\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width,\n    height,\n    rotation\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(line, position, rotSize, chartArea) {\n  let t = 0.5;\n  const space = spaceAround(line, chartArea);\n  const label = line.options.label;\n  if (position === 'start') {\n    t = calculateTAdjust({w: line.x2 - line.x, h: line.y2 - line.y}, rotSize, label, space);\n  } else if (position === 'end') {\n    t = 1 - calculateTAdjust({w: line.x - line.x2, h: line.y - line.y2}, rotSize, label, space);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, labelSize, label, space) {\n  const {xPadding, yPadding} = label;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + xPadding - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + yPadding - space.y) / lineH);\n  return Math.max(Math.min(Math.max(x, y), 0.25), 0);\n}\n\nfunction spaceAround(line, chartArea) {\n  const {x, x2, y, y2} = line;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l < r ? 1 : -1,\n    dy: t < b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n\n  return coordinate;\n}\n","import BoxAnnotation from './box';\n\nexport default class EllipseAnnotation extends BoxAnnotation {\n\n  inRange(x, y) {\n    return pointInEllipse({x, y}, this);\n  }\n\n  draw(ctx) {\n    const {width, height, options} = this;\n    const center = this.getCenterPoint(true);\n\n    ctx.save();\n\n    ctx.beginPath();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.ellipse(center.x, center.y, height / 2, width / 2, Math.PI / 2, 0, 2 * Math.PI);\n\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  display: true,\n  borderWidth: 1\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction pointInEllipse(p, ellipse) {\n  const {width, height} = ellipse;\n  const center = ellipse.getCenterPoint(true);\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n\n  return (Math.pow(p.x - center.x, 2) / Math.pow(xRadius, 2)) + (Math.pow(p.y - center.y, 2) / Math.pow(yRadius, 2)) <= 1.0;\n}\n","import {Element} from 'chart.js';\nimport {scaleValue} from '../helpers';\n\nexport default class PointAnnotation extends Element {\n\n  inRange(x, y) {\n    const {width, options} = this;\n    const center = this.getCenterPoint(true);\n    const radius = width / 2 + options.borderWidth;\n\n    if (radius <= 0) {\n      return false;\n    }\n\n    return (Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2)) <= Math.pow(radius, 2);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  draw(ctx) {\n    const {x, y, width, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.beginPath();\n    ctx.arc(x, y, width / 2, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const {chartArea, scales} = chart;\n    const xScale = scales[options.xScaleID];\n    const yScale = scales[options.yScaleID];\n    let x = chartArea.width / 2;\n    let y = chartArea.height / 2;\n\n    if (xScale) {\n      x = scaleValue(xScale, options.xValue, x);\n    }\n\n    if (yScale) {\n      y = scaleValue(yScale, options.yValue, y);\n    }\n\n    return {\n      x,\n      y,\n      width: options.radius * 2,\n      height: options.radius * 2\n    };\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  display: true,\n  borderWidth: 1,\n  radius: 10,\n  xScaleID: 'x',\n  yScaleID: 'y'\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n","import {Animations, Chart} from 'chart.js';\nimport {clipArea, unclipArea, isFinite, merge, valueOrDefault, callback as callCallback, isObject} from 'chart.js/helpers';\nimport {handleEvent, updateListeners} from './events';\nimport BoxAnnotation from './types/box';\nimport LineAnnotation from './types/line';\nimport EllipseAnnotation from './types/ellipse';\nimport PointAnnotation from './types/point';\n\nconst chartStates = new Map();\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  line: LineAnnotation,\n  ellipse: EllipseAnnotation,\n  point: PointAnnotation\n};\n\nexport default {\n  id: 'annotation',\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      elements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      scales: new Set()\n    });\n  },\n\n  afterDataLimits(chart, args, options) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(args.scale, state, options);\n  },\n\n  beforeUpdate(chart, args, options) {\n    if (isObject(options.annotations)) {\n      const array = new Array();\n      Object.keys(options.annotations).forEach(key => {\n        const value = options.annotations[key];\n        if (isObject(value)) {\n          value.id = key;\n          array.push(value);\n        }\n      });\n      options.annotations = array;\n    }\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, options, 'beforeDatasetsDraw');\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, options, 'afterDatasetsDraw');\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, options, 'beforeDraw');\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, options, 'afterDraw');\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    handleEvent(chart, state, args.event, options);\n  },\n\n  destroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    drawTime: 'afterDatasetsDraw',\n    dblClickSpeed: 350, // ms\n    annotations: {},\n    animation: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n        type: 'number'\n      },\n    }\n  },\n};\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateElements(chart, state, options, mode) {\n  const chartAnims = chart.options.animation;\n  const animOpts = chartAnims && merge({}, [chartAnims, options.animation]);\n  const animations = resolveAnimations(chart, animOpts, mode);\n\n  const annotations = options.annotations || [];\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotation = annotations[i];\n    let el = elements[i];\n    const elType = annotationTypes[annotation.type] || annotationTypes.line;\n    if (!el || !(el instanceof elType)) {\n      el = elements[i] = new elType();\n    }\n    const properties = el.resolveElementProperties(chart, annotation);\n    properties.options = merge(Object.create(null), [elType.defaults, annotation]);\n    animations.update(el, properties);\n\n    const display = typeof annotation.display === 'function' ? callCallback(annotation.display, [{chart, element: el}]) : valueOrDefault(annotation.display, true);\n    el._display = !!display;\n  }\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nfunction draw(chart, options, caller) {\n  const {ctx, chartArea} = chart;\n  const elements = chartStates.get(chart).elements.filter(el => el._display);\n\n  clipArea(ctx, chartArea);\n  elements.forEach(el => {\n    if ((el.options.drawTime || options.drawTime || caller) === caller) {\n      el.draw(ctx);\n    }\n  });\n  unclipArea(ctx);\n\n  elements.forEach(el => {\n    if ('drawLabel' in el && el.options.label && (el.options.label.drawTime || el.options.drawTime || options.drawTime || caller) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\n\nfunction getAnnotationOptions(elements, options) {\n  if (elements && elements.length) {\n    return elements.filter(el => el._display).map(el => el.options);\n  }\n  return options.annotations || [];\n}\n\nfunction adjustScaleRange(scale, state, options) {\n  const annotations = getAnnotationOptions(state.elements, options);\n  const range = getScaleLimits(scale, annotations);\n  let changed = false;\n  if (isFinite(range.min) &&\n\t\ttypeof scale.options.min === 'undefined' &&\n\t\ttypeof scale.options.suggestedMin === 'undefined') {\n    changed = scale.min !== range.min;\n    scale.min = range.min;\n  }\n  if (isFinite(range.max) &&\n\t\ttypeof scale.options.max === 'undefined' &&\n\t\ttypeof scale.options.suggestedMax === 'undefined') {\n    changed = scale.max !== range.max;\n    scale.max = range.max;\n  }\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\n\nfunction getScaleLimits(scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = scale.axis + 'ScaleID';\n  const scaleAnnotations = annotations.filter(annotation => annotation[scaleIDOption] === scaleID || annotation.scaleID === scaleID);\n  let min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n  let max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n  scaleAnnotations.forEach(annotation => {\n    ['value', 'endValue', axis + 'Min', axis + 'Max', 'xValue', 'yValue'].forEach(prop => {\n      if (prop in annotation) {\n        const value = annotation[prop];\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    });\n  });\n  return {min, max};\n}\n","import {Chart} from 'chart.js';\nimport Annotation from './annotation';\n\nChart.register(Annotation);\n\nexport default Annotation;\n"],"names":["clickHooks","moveHooks","hooks","concat","handleEvent","chart","state","event","options","listened","type","moveListened","element","getNearestItem","elements","previous","hovered","dispatchEvent","leave","listeners","enter","dispatchMoveEvents","handleMoveEvents","elOpts","dblclick","click","clickTimeout","clearTimeout","setTimeout","dblClickSpeed","handleClickEvents","_state","handler","callHandler","position","minDistance","Number","POSITIVE_INFINITY","filter","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","distanceBetweenPoints","push","sort","a","b","_index","slice","PI","Math","HALF_PI","scaleValue","scale","value","fallback","parse","isFinite","getPixelForValue","roundedRect","ctx","width","height","radius","beginPath","r","min","left","top","right","bottom","moveTo","arc","closePath","rect","BoxAnnotation","Element","[object Object]","mouseX","mouseY","useFinalPosition","this","getProps","save","lineWidth","borderWidth","strokeStyle","borderColor","fillStyle","backgroundColor","cornerRadius","fill","stroke","restore","xScale","scales","xScaleID","yScale","yScaleID","max","y2","x2","chartArea","xMin","xMax","yMin","yMax","id","defaults","display","defaultRoutes","pointInLine","p1","p2","t","LineAnnotation","epsilon","me","dy","abs","interpolateY","dx","interpolateX","label","enabled","content","labelRect","point","angle","rotation","cos","sin","cx","cy","w2","h2","intersects","isOnLabel","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineTo","labelIsVisible","line","font","toFontString","textAlign","lines","isArray","count","length","i","text","widthCache","has","set","measureText","get","xPadding","size","yPadding","measureLabel","xAdjust","yAdjust","atan2","calculateAutoRotation","toRadians","w","h","rotatedSize","rotSize","space","l","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","padding","yCoordinateSizes","adjustLabelCoordinate","calculateLabelPosition","translate","rotate","color","textYPosition","textBaseline","fillText","drawLabel","scaleID","NaN","endValue","isHorizontal","family","style","Map","lineSize","labelSize","lineW","lineH","coordinate","labelSizes","halfSize","EllipseAnnotation","p","ellipse","xRadius","yRadius","pow","pointInEllipse","PointAnnotation","xValue","yValue","chartStates","annotationTypes","box","Chart","register","unregister","Set","args","annotations","el","_display","map","getAnnotationOptions","range","axis","scaleIDOption","scaleAnnotations","annotation","valueOrDefault","NEGATIVE_INFINITY","forEach","prop","getScaleLimits","changed","suggestedMin","suggestedMax","handleTickRangeOptions","adjustScaleRange","isObject","array","Array","Object","keys","key","hook","scope","updateListeners","mode","chartAnims","animation","animOpts","merge","animations","directUpdater","Animations","resolveAnimations","start","add","splice","resyncElements","elType","properties","resolveElementProperties","create","update","callCallback","updateElements","_args","draw","delete","_getState","drawTime","numbers","assign","caller","clipArea","unclipArea","Annotation"],"mappings":"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"}